[{"/Users/ramyarajendra/Desktop/transaction-app/src/index.js":"1","/Users/ramyarajendra/Desktop/transaction-app/src/App.js":"2","/Users/ramyarajendra/Desktop/transaction-app/src/reportWebVitals.js":"3","/Users/ramyarajendra/Desktop/transaction-app/src/routers/AppRouter.js":"4","/Users/ramyarajendra/Desktop/transaction-app/src/components/Register.js":"5","/Users/ramyarajendra/Desktop/transaction-app/src/components/Login.js":"6","/Users/ramyarajendra/Desktop/transaction-app/src/store/store.js":"7","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/authReducer.js":"8","/Users/ramyarajendra/Desktop/transaction-app/src/utils/Constants.js":"9","/Users/ramyarajendra/Desktop/transaction-app/src/actions/Auth.js":"10","/Users/ramyarajendra/Desktop/transaction-app/src/utils/Common.js":"11","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/alertReducer.js":"12","/Users/ramyarajendra/Desktop/transaction-app/src/actions/Alert.js":"13","/Users/ramyarajendra/Desktop/transaction-app/src/components/Profile.js":"14","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/profileReducer.js":"15","/Users/ramyarajendra/Desktop/transaction-app/src/routers/PrivateRoute.js":"16","/Users/ramyarajendra/Desktop/transaction-app/src/components/Navbar.js":"17","/Users/ramyarajendra/Desktop/transaction-app/src/actions/profileActions.js":"18","/Users/ramyarajendra/Desktop/transaction-app/src/components/Account.js":"19","/Users/ramyarajendra/Desktop/transaction-app/src/components/AccountForm.js":"20","/Users/ramyarajendra/Desktop/transaction-app/src/components/AddAccountForm.js":"21","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/accountReducer.js":"22","/Users/ramyarajendra/Desktop/transaction-app/src/actions/accountAction.js":"23","/Users/ramyarajendra/Desktop/transaction-app/src/utils/mask.js":"24","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/transactionReducer.js":"25","/Users/ramyarajendra/Desktop/transaction-app/src/actions/transactionAction.js":"26","/Users/ramyarajendra/Desktop/transaction-app/src/components/Summary.js":"27","/Users/ramyarajendra/Desktop/transaction-app/src/components/DataTable.js":"28"},{"size":547,"mtime":1608713363545,"results":"29","hashOfConfig":"30"},{"size":263,"mtime":1608717612893,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1607551489342,"results":"32","hashOfConfig":"30"},{"size":1092,"mtime":1609541413000,"results":"33","hashOfConfig":"30"},{"size":7407,"mtime":1608273101024,"results":"34","hashOfConfig":"30"},{"size":5578,"mtime":1608701404782,"results":"35","hashOfConfig":"30"},{"size":761,"mtime":1609660815000,"results":"36","hashOfConfig":"30"},{"size":604,"mtime":1608716993427,"results":"37","hashOfConfig":"30"},{"size":483,"mtime":1609659415977,"results":"38","hashOfConfig":"30"},{"size":1826,"mtime":1609461148000,"results":"39","hashOfConfig":"30"},{"size":1085,"mtime":1609462131000,"results":"40","hashOfConfig":"30"},{"size":943,"mtime":1608271444437,"results":"41","hashOfConfig":"30"},{"size":673,"mtime":1608271357691,"results":"42","hashOfConfig":"30"},{"size":7054,"mtime":1609475674493,"results":"43","hashOfConfig":"30"},{"size":497,"mtime":1609575542000,"results":"44","hashOfConfig":"30"},{"size":539,"mtime":1608701899383,"results":"45","hashOfConfig":"30"},{"size":3235,"mtime":1609543910815,"results":"46","hashOfConfig":"30"},{"size":928,"mtime":1609461794000,"results":"47","hashOfConfig":"30"},{"size":2535,"mtime":1609719960697,"results":"48","hashOfConfig":"30"},{"size":3650,"mtime":1609661564486,"results":"49","hashOfConfig":"30"},{"size":3700,"mtime":1609573334372,"results":"50","hashOfConfig":"30"},{"size":486,"mtime":1609716152704,"results":"51","hashOfConfig":"30"},{"size":1478,"mtime":1609715928146,"results":"52","hashOfConfig":"30"},{"size":124,"mtime":1609572796324,"results":"53","hashOfConfig":"30"},{"size":345,"mtime":1609708665067,"results":"54","hashOfConfig":"30"},{"size":1091,"mtime":1609716118559,"results":"55","hashOfConfig":"30"},{"size":3010,"mtime":1609807044093,"results":"56","hashOfConfig":"30"},{"size":3865,"mtime":1609721226203,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"kw8g32",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/Users/ramyarajendra/Desktop/transaction-app/src/index.js",[],["125","126"],"/Users/ramyarajendra/Desktop/transaction-app/src/App.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reportWebVitals.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/routers/AppRouter.js",["127","128"],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Register.js",["129","130","131","132"],"import { Box, Button, FilledInput, FormControl, FormHelperText, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport clsx from 'clsx';\nimport { Email, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport {register} from '../actions/Auth'\nimport {validateFields} from '../utils/Common'\nimport {setErrors} from '../actions/Alert'\nimport { Alert } from '@material-ui/lab';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(3),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n  }));\nconst Register = ({register, error, setErrors, success}) => {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        password: '',\n        showPassword: false,\n        email: '',\n        fname:'',\n        lname:'',\n        isSubmitted:false,\n        open: false,\n      });\n    const registerUser = async (event) => {\n        event.preventDefault();\n        const { fname, lname, email, password } = values;\n    \n        const fieldsToValidate = [\n          { fname },\n          { lname },\n          { email },\n          { password }\n        ];\n    \n        const allFieldsEntered = validateFields(fieldsToValidate);\n        if (!allFieldsEntered) {\n            // setValues({...values, errorMsg: {signup_error: 'Please enter all the fields!!'}})\n            setErrors({signup_error: 'Please enter all the fields!!'})\n        } else {\n            const succ = await register({ fname, lname, email, password })\n            // if(succ.success){\n            //     console.log('success..')\n            //     setValues({...values, isSubmitted:true})\n                \n            //     setValues({...values, successMsg:'User registered successfully!!'})\n            // }\n        }\n    };\n      const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    \n      const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n      };\n    \n      const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n      };\n\n      const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setValues({...values, open: false})\n        setValues({...values, isSubmitted: false})\n      };\n\n      useEffect(()=>{\n        if(error && error.length !==0 ){\n          setValues({...values, open: true})\n        }\n        else if( success && success.length !==0 ){\n          setValues({...values, isSubmitted: true})\n        }\n        else{\n          setValues({...values, open: false})\n          setValues({...values, isSubmitted:false})\n        }\n      },[error, success])\n\n    return (\n        <form onSubmit={registerUser}>\n        {error &&  values.open && error.map(e => ( <Snackbar open={values.open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n            {e.errors.signup_error}\n          </Alert>\n        </Snackbar>))}\n        { success && values.isSubmitted && success.map( s => <Snackbar open={values.isSubmitted} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"success\">\n            {s.successMsg}\n          </Alert>\n        </Snackbar>)}\n        <Grid>\n            <Box justifyContent='center' display='flex' className={clsx(classes.margin)}>\n                <Typography variant=\"h5\" >Sign Up</Typography>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">First Name</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='text'\n                        value={values.fname}\n                        onChange={handleChange('fname')}\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Last Name</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='text'\n                        value={values.lname}\n                        onChange={handleChange('lname')}\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='email'\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"email icon\"\n                            edge=\"end\"\n                            >\n                            <Email/>\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                            >\n                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <Button type='submit' variant=\"contained\" className={clsx(classes.margin, classes.textField)} color=\"primary\">SIGN UP</Button>\n            </Box>\n        </Grid>\n        </form>\n    )\n}\nconst mapStateToProps = (state) => ({\n    error: state.alert.error,\n    success: state.alert.success\n})\n\nexport default connect(mapStateToProps, { register, setErrors})(Register)\n","/Users/ramyarajendra/Desktop/transaction-app/src/components/Login.js",["133","134","135","136"],"import { Box, Button, FilledInput, FormControl, FormHelperText, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport clsx from 'clsx';\nimport { Email, Visibility, VisibilityOff } from '@material-ui/icons';\nimport {initiateLogin} from '../actions/Auth'\nimport { connect } from 'react-redux';\nimport { validateFields } from '../utils/Common';\nimport { Alert } from '@material-ui/lab';\nimport { setErrors } from '../actions/Alert';\nimport {history} from '../routers/AppRouter'\nimport { useHistory } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(3),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n  }));\nconst Login = ({initiateLogin, error, setErrors, auth}) => {\n    const classes = useStyles();\n    let history = useHistory()\n    const [values, setValues] = React.useState({\n        password: '',\n        showPassword: false,\n        email: '',\n        open: false\n      });\n    const handleLogin = (event) => {\n        event.preventDefault();\n        const { email, password } = values;\n        const fieldsToValidate = [{ email }, { password }];\n    \n        const allFieldsEntered = validateFields(fieldsToValidate);\n        if (!allFieldsEntered) {\n          setErrors({signin_error:'Please enter all the fields!!'})\n        } else {\n          // login successful\n          initiateLogin(email, password)\n          // history.push('/profile')\n        }\n    };\n      useEffect(()=>{\n        if(auth.isAuthenticated){\n          history.push('/profile')\n        }\n        if(error && error.length !==0 ){\n          setValues({...values, open: true})\n        }\n        else{\n          setValues({...values, open: false})\n        }\n      },[error, auth.isAuthenticated, history])\n      const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    \n      const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n      };\n    \n      const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n      };\n      const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setValues({...values, open: false})\n        \n      };\n\n    return (\n      <form onSubmit={handleLogin}>\n        {error &&  values.open && error.map(e => ( <Snackbar open={values.open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n            {e.errors.signin_error}\n          </Alert>\n        </Snackbar>))}\n        <Grid>\n            <Box justifyContent='center' display='flex' className={clsx(classes.margin)}>\n                <Typography variant=\"h5\" >Sign In to your account</Typography>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='email'\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"email icon\"\n                            edge=\"end\"\n                            >\n                            <Email/>\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                            >\n                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <Button type='submit' variant=\"contained\" className={clsx(classes.margin, classes.textField)} color=\"primary\">SIGN IN</Button>\n            </Box>\n        </Grid>\n        </form>\n    )\n}\n\nconst mapStateToProps = (state) =>({\n  error: state.alert.error,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {initiateLogin, setErrors})(Login)\n","/Users/ramyarajendra/Desktop/transaction-app/src/store/store.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/authReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/utils/Constants.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/Auth.js",["137","138","139"],"/Users/ramyarajendra/Desktop/transaction-app/src/utils/Common.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/alertReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/Alert.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Profile.js",["140"],"import { Box, Button, Card, CardActions, CardContent, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, FilledInput, FormControl, IconButton, InputAdornment, InputLabel, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport EditIcon from '@material-ui/icons/Edit';\nimport clsx from 'clsx';\nimport { Email } from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateProfile } from '../actions/profileActions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    //   minWidth: 10,\n        width: '100%'\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 16,\n    },\n    paper:{\n        margin: 'auto',\n        maxWidth: 500\n    },\n    margin: {\n        margin: theme.spacing(3),\n      },\n      withoutLabel: {\n        marginTop: theme.spacing(3),\n      },\n      textField: {\n        width: '50ch',\n      },\n  }));\nconst Profile = ({profileData, updateProfile}) => {\n    const [values, setValues] = useState(\n        {\n            fname: null,\n            lname: null,\n            email: null\n        }\n    )\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n\n      };\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setValues({...values , fname: profileData && profileData.fname  , lname: profileData && profileData.lname, email: profileData && profileData.email})\n    };\n    const onSave = (e) => {\n        e.preventDefault()\n        updateProfile(values)\n        setOpen(false)\n        // handleClose()\n    }\n    useEffect(() => {\n        setValues({...values , fname: profileData && profileData.fname  , lname: profileData && profileData.lname, email: profileData && profileData.email})\n    },[profileData])\n    return (\n        <div>\n        <Container className={classes.paper}>\n            \n            <Box display='flex' m={1} p={1} justifyContent=\"center\">\n                <Typography variant=\"h4\" component=\"h2\">\n                        Profile\n                </Typography>\n            </Box>\n            <Card className={classes.root}>\n                { profileData && <CardContent>\n                    <Box display=\"flex\" justifyContent='flex-end'>\n                        <IconButton color='primary'  onClick={handleClickOpen}>\n                            <EditIcon/>\n                        </IconButton>\n                    </Box>\n                    <Typography className={classes.pos} >\n                        First Name : {profileData.fname}\n                    </Typography>\n                    <Typography className={classes.pos} >\n                        Last Name : {profileData.lname}\n                    </Typography>\n                    <Typography className={classes.pos}>\n                        Email : {profileData.email}\n                    </Typography>\n                </CardContent>}\n                <Divider/>\n                <CardActions>\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\">Change Password</Button>\n                </CardActions>\n            </Card>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <form onSubmit={onSave}>\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Your Profile\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Box justifyContent='center' display='flex'>\n                        <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                            <InputLabel htmlFor=\"filled-adornment-password\">First Name</InputLabel>\n                            <FilledInput\n                                id=\"filled-adornment-password\"\n                                type='text'\n                                value={values.fname}\n                                onChange={handleChange('fname')}\n                                required\n                            />\n                        </FormControl>\n                    </Box>\n                    <Box justifyContent='center' display='flex'>\n                        <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                            <InputLabel htmlFor=\"filled-adornment-password\">Last Name</InputLabel>\n                            <FilledInput\n                                id=\"filled-adornment-password\"\n                                type='text'\n                                value={values.lname}\n                                onChange={handleChange('lname')}\n                                required\n                            />\n                        </FormControl>\n                    </Box>\n                    <Box justifyContent='center' display='flex'>\n                        <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                            <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                            <FilledInput\n                                id=\"filled-adornment-password\"\n                                type='email'\n                                value={values.email}\n                                onChange={handleChange('email')}\n                                required\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"email icon\"\n                                    edge=\"end\"\n                                    >\n                                    <Email/>\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button type='submit' color=\"primary\" autoFocus>\n                        Save\n                    </Button>\n                </DialogActions>\n                </form>\n            </Dialog>\n        </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    profileData: state.profile.profileData\n})\n\nexport default withRouter(connect(mapStateToProps, {updateProfile}) (Profile))\n","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/profileReducer.js",["141"],"import React from 'react'\nimport {UPDATE_PROFILE, GET_PROFILE, SIGN_OUT} from '../utils/Constants'\n\nconst initialState = {\n    profileData: null\n}\n\nexport const profileReducer = (state = initialState, action) =>{\n    switch (action.type) {\n        case UPDATE_PROFILE:\n        case GET_PROFILE:    \n            return{\n                ...state,\n                profileData: action.payload\n            }\n        case SIGN_OUT:\n            return{}\n        default:\n            return state;\n    }\n}","/Users/ramyarajendra/Desktop/transaction-app/src/routers/PrivateRoute.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Navbar.js",["142"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { CssBaseline } from '@material-ui/core';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/Auth'\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = ({ logout }) => {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseLogOut = () => {\n    setAnchorEl(null);\n    logout()\n  }\n\n  return (\n    <div className={classes.root}>\n       <CssBaseline/>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <AccountBalanceWalletIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Transaction App\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n              <Link to='/profile' style={{ textDecoration: 'none', display:'block', color:'#000' }}> \n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n              </Link> \n              <Link to='/account' style={{ textDecoration: 'none', display:'block', color:'#000' }}> \n                <MenuItem onClick={handleClose}>Account</MenuItem>\n              </Link>\n                <MenuItem onClick={handleCloseLogOut}>LogOut</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\nexport default connect(mapStateToProps, { logout })(Navbar)","/Users/ramyarajendra/Desktop/transaction-app/src/actions/profileActions.js",["143"],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Account.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/AccountForm.js",["144"],"import React, { useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Divider, FormControl, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\nimport AddAccountForm from './AddAccountForm';\nimport { connect } from 'react-redux';\nimport { getAccountDetails } from '../actions/accountAction';\nimport {maskNumber} from '../utils/mask'\nimport {depositAmount, withdrawAmount } from '../actions/transactionAction'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 30,\n  },\n  pos: {\n    marginBottom: 25,\n    marginTop: 10\n  },\n  margin: {\n    marginTop: theme.spacing(1),\n  },\n  button: {\n      marginLeft:10\n  }\n}));\n\n\nconst AccountForm = ({type, account, userData, getAccountDetails, depositAmount, withdrawAmount}) => {\n    const classes = useStyles();\n    const {email} = userData\n    const [values, setValues] = React.useState({\n        amount: ''\n    })\n    const account_no = account.account_no ? maskNumber(account.account_no) : ''    \n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    useEffect(()=> {\n      if(email)\n        getAccountDetails()\n    },[email])\n    const onSubmit = (e) => {\n      e.preventDefault()\n      type === 'Deposit' ? depositAmount(account._id, Number(values.amount)): withdrawAmount(account._id, Number(values.amount))\n    }\n    return (\n        <Container>\n          { account_no ?\n          <Card className={classes.root} variant=\"outlined\">\n            <form onSubmit={onSubmit}>\n            <CardContent>\n                <Typography className={classes.title} gutterBottom>\n                 {type}\n                </Typography>\n                <Divider/>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Account Number: {account_no}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                Available Balance: {account.total_balance}\n                </Typography>\n                <FormControl  className={classes.margin} variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n                    <OutlinedInput\n                        id=\"outlined-adornment-amount\"\n                        value={values.amount}\n                        onChange={handleChange('amount')}\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                        labelWidth={60}\n                        placeholder={`Enter amount to ${type}`}\n                        style={{ width : '40vw'}}\n                        required\n                    />\n                </FormControl>\n            </CardContent>\n            <CardActions>\n                <Button type='submit' size=\"small\" className={classes.button} variant='outlined' color='primary' >Submit</Button>\n            </CardActions>\n            </form>\n        </Card> :\n        <AddAccountForm/> }\n        </Container>\n    )\n}\nconst mapStateToProps = state => ({\n  userData: state.auth.userData,\n  account: state.account\n\n})\n\nexport default connect(mapStateToProps, {getAccountDetails, depositAmount, withdrawAmount })(AccountForm)\n","/Users/ramyarajendra/Desktop/transaction-app/src/components/AddAccountForm.js",["145"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Divider, FormControl, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { addAccountDetails } from '../actions/accountAction';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 30,\n  },\n  pos: {\n    marginBottom: 25,\n    marginTop: 10\n  },\n  margin: {\n    marginTop: theme.spacing(1),\n  },\n  button: {\n      marginLeft:10\n  }\n}));\n\n\nconst AddAccountForm = ({addAccountDetails}) => {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        accno: '',\n        bankName:'',\n        ifsc:''\n    })   \n    const onAdd = async (e) => {\n        e.preventDefault()\n        await addAccountDetails(values.accno, values.bankName, values.ifsc)\n    } \n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    return (\n        <Container>\n            <form onSubmit={onAdd}>\n            <Card className={classes.root} variant=\"outlined\">\n                <CardContent>\n                    <Typography className={classes.title} gutterBottom>\n                    Add Account\n                    </Typography>\n                    <Divider/>\n                    <FormControl  className={classes.margin} variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">Account No</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-amount\"\n                            value={values.accno}\n                            onChange={handleChange('accno')}\n                            labelWidth={100}\n                            style={{ width : '40vw'}}\n                        />\n                    </FormControl>\n                    <FormControl  className={classes.margin} variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">Bank Name</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-amount\"\n                            value={values.bankName}\n                            onChange={handleChange('bankName')}\n                            labelWidth={90}\n                            style={{ width : '40vw'}}\n                        />\n                    </FormControl>\n                    <FormControl  className={classes.margin} variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">IFSC Code</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-amount\"\n                            value={values.ifsc}\n                            onChange={handleChange('ifsc')}\n                            labelWidth={90}\n                            style={{ width : '40vw'}}\n                        />\n                    </FormControl>\n                </CardContent>\n                <CardActions>\n                    <Button type='submit' size=\"small\" className={classes.button} variant='outlined' color='primary' >Submit</Button>\n                </CardActions>\n            </Card> \n            </form>\n        </Container>\n    )\n}\n\nexport default connect(null, {addAccountDetails})(AddAccountForm)\n","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/accountReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/accountAction.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/utils/mask.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/transactionReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/transactionAction.js",["146","147"],"import { setErrors} from './Alert'\nimport {ADD_TRANSACTION} from '../utils/Constants'\nimport {updateAccount} from './accountAction'\nimport axios from 'axios'\n\nexport const depositAmount = (account_id, amount) => async (dispatch) =>{\n    try {\n        const { data: {msg, accountDetails, transactionObj} } = await axios.post(`/deposit/${account_id}`, {deposit_amount: amount})\n        dispatch({\n            type: ADD_TRANSACTION,\n            payload: transactionObj\n        })\n        dispatch(updateAccount(accountDetails));\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data));\n    }\n}\nexport const withdrawAmount = (account_id, amount) => async (dispatch) =>{\n    try {\n        const { data: {msg, accountDetails, transactionObj} } = await axios.post(`/withdraw/${account_id}`, {withdraw_amount: amount})\n        dispatch({\n            type: ADD_TRANSACTION,\n            payload: transactionObj\n        })\n        dispatch(updateAccount(accountDetails));\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data));\n    }\n}","/Users/ramyarajendra/Desktop/transaction-app/src/components/Summary.js",["148"],"import React, { useState } from 'react'\nimport DataTable from './DataTable'\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { Box, Button, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    margin: {\n        marginBottom: 10\n    }\n})\nfunction disablePrevDates(startDate) {\n    const startSeconds = Date.parse(startDate);\n    return (date) => {\n      return Date.parse(date) < startSeconds;\n    }\n}\nconst Summary = () => {\n    const [startDate, setStartDate] = useState(null);\n    const [ endDate, setEndDate] = useState(null)\n    const handleStartDateChange = (date) => {\n        setStartDate(date);\n    };\n    const handleEndDateChange = (date) => {\n        setEndDate(date);\n    };\n    const classes = useStyles()\n    return(\n        <div>\n            <Grid className={classes.margin} container justify='center' alignItems='center' spacing={2}>\n                <Grid item xs={3}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            autoOk={true}\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"Start Date\"\n                            value={startDate}\n                            maxDate = {new Date()}\n                            onChange={handleStartDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={3}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            autoOk={true}\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"End Date\"\n                            value={endDate}\n                            onChange={handleEndDateChange}\n                            shouldDisableDate={disablePrevDates(startDate)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={4}>\n                    <Box mt={3}>\n                        <Button  variant='outlined' color='primary' >Filter</Button>\n                    </Box>\n                </Grid>\n            </Grid>\n            <DataTable/>\n        </div>\n    )\n}\n\nexport default Summary\n","/Users/ramyarajendra/Desktop/transaction-app/src/components/DataTable.js",[],["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":3,"column":39,"nodeType":"157","messageId":"158","endLine":3,"endColumn":45},{"ruleId":"155","severity":1,"message":"159","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":7,"endColumn":29},{"ruleId":"155","severity":1,"message":"160","line":1,"column":49,"nodeType":"157","messageId":"158","endLine":1,"endColumn":63},{"ruleId":"155","severity":1,"message":"161","line":1,"column":83,"nodeType":"157","messageId":"158","endLine":1,"endColumn":88},{"ruleId":"155","severity":1,"message":"162","line":54,"column":19,"nodeType":"157","messageId":"158","endLine":54,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":94,"column":9,"nodeType":"165","endLine":94,"endColumn":25,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"160","line":1,"column":49,"nodeType":"157","messageId":"158","endLine":1,"endColumn":63},{"ruleId":"155","severity":1,"message":"161","line":1,"column":83,"nodeType":"157","messageId":"158","endLine":1,"endColumn":88},{"ruleId":"155","severity":1,"message":"167","line":10,"column":9,"nodeType":"157","messageId":"158","endLine":10,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":62,"column":9,"nodeType":"165","endLine":62,"endColumn":47,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"169","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":18},{"ruleId":"155","severity":1,"message":"170","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":15},{"ruleId":"155","severity":1,"message":"171","line":34,"column":15,"nodeType":"157","messageId":"158","endLine":34,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":71,"column":7,"nodeType":"165","endLine":71,"endColumn":20,"suggestions":"172"},{"ruleId":"155","severity":1,"message":"173","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"174","line":34,"column":9,"nodeType":"157","messageId":"158","endLine":34,"endColumn":21},{"ruleId":"155","severity":1,"message":"175","line":5,"column":24,"nodeType":"157","messageId":"158","endLine":5,"endColumn":40},{"ruleId":"163","severity":1,"message":"176","line":53,"column":7,"nodeType":"165","endLine":53,"endColumn":14,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"178","line":8,"column":43,"nodeType":"157","messageId":"158","endLine":8,"endColumn":57},{"ruleId":"155","severity":1,"message":"179","line":8,"column":24,"nodeType":"157","messageId":"158","endLine":8,"endColumn":27},{"ruleId":"155","severity":1,"message":"179","line":20,"column":24,"nodeType":"157","messageId":"158","endLine":20,"endColumn":27},{"ruleId":"155","severity":1,"message":"180","line":8,"column":3,"nodeType":"157","messageId":"158","endLine":8,"endColumn":21},{"ruleId":"151","replacedBy":"181"},{"ruleId":"153","replacedBy":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'createBrowserHistory' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'succ' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["185"],"'history' is defined but never used.",["186"],"'Redirect' is defined but never used.","'Profile' is defined but never used.","'res' is assigned a value but never used.",["187"],"'React' is defined but never used.","'handleChange' is assigned a value but never used.","'removeAuthHeader' is defined but never used.","React Hook useEffect has a missing dependency: 'getAccountDetails'. Either include it or remove the dependency array. If 'getAccountDetails' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["188"],"'InputAdornment' is defined but never used.","'msg' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.",["183"],["184"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [error, success, values]",{"range":"197","text":"198"},"Update the dependencies array to be: [error, auth.isAuthenticated, history, values]",{"range":"199","text":"200"},"Update the dependencies array to be: [profileData, values]",{"range":"201","text":"202"},"Update the dependencies array to be: [email, getAccountDetails]",{"range":"203","text":"204"},[2951,2967],"[error, success, values]",[1945,1983],"[error, auth.isAuthenticated, history, values]",[2128,2141],"[profileData, values]",[1601,1608],"[email, getAccountDetails]"]
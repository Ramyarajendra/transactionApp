[{"/Users/ramyarajendra/Desktop/transaction-app/src/index.js":"1","/Users/ramyarajendra/Desktop/transaction-app/src/App.js":"2","/Users/ramyarajendra/Desktop/transaction-app/src/reportWebVitals.js":"3","/Users/ramyarajendra/Desktop/transaction-app/src/routers/AppRouter.js":"4","/Users/ramyarajendra/Desktop/transaction-app/src/components/Register.js":"5","/Users/ramyarajendra/Desktop/transaction-app/src/components/Login.js":"6","/Users/ramyarajendra/Desktop/transaction-app/src/store/store.js":"7","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/authReducer.js":"8","/Users/ramyarajendra/Desktop/transaction-app/src/utils/Constants.js":"9","/Users/ramyarajendra/Desktop/transaction-app/src/actions/Auth.js":"10","/Users/ramyarajendra/Desktop/transaction-app/src/utils/Common.js":"11","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/alertReducer.js":"12","/Users/ramyarajendra/Desktop/transaction-app/src/actions/Alert.js":"13","/Users/ramyarajendra/Desktop/transaction-app/src/components/Profile.js":"14","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/profileReducer.js":"15","/Users/ramyarajendra/Desktop/transaction-app/src/routers/PrivateRoute.js":"16","/Users/ramyarajendra/Desktop/transaction-app/src/components/Navbar.js":"17","/Users/ramyarajendra/Desktop/transaction-app/src/actions/profileActions.js":"18"},{"size":547,"mtime":1608713363545,"results":"19","hashOfConfig":"20"},{"size":263,"mtime":1608717612893,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607551489342,"results":"22","hashOfConfig":"20"},{"size":979,"mtime":1609210004605,"results":"23","hashOfConfig":"20"},{"size":7407,"mtime":1608273101024,"results":"24","hashOfConfig":"20"},{"size":5578,"mtime":1608701404782,"results":"25","hashOfConfig":"20"},{"size":567,"mtime":1608445497113,"results":"26","hashOfConfig":"20"},{"size":604,"mtime":1608716993427,"results":"27","hashOfConfig":"20"},{"size":397,"mtime":1608444467910,"results":"28","hashOfConfig":"20"},{"size":1826,"mtime":1609461148796,"results":"29","hashOfConfig":"20"},{"size":1085,"mtime":1609462131946,"results":"30","hashOfConfig":"20"},{"size":943,"mtime":1608271444437,"results":"31","hashOfConfig":"20"},{"size":673,"mtime":1608271357691,"results":"32","hashOfConfig":"20"},{"size":7054,"mtime":1609475674493,"results":"33","hashOfConfig":"20"},{"size":443,"mtime":1609462244098,"results":"34","hashOfConfig":"20"},{"size":539,"mtime":1608701899383,"results":"35","hashOfConfig":"20"},{"size":3101,"mtime":1609209785211,"results":"36","hashOfConfig":"20"},{"size":928,"mtime":1609461794703,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"kw8g32",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ramyarajendra/Desktop/transaction-app/src/index.js",[],["79","80"],"/Users/ramyarajendra/Desktop/transaction-app/src/App.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reportWebVitals.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/routers/AppRouter.js",["81","82"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {Route, Switch, BrowserRouter, Router} from 'react-router-dom'\nimport Login from '../components/Login'\nimport Profile from '../components/Profile'\nimport Register from '../components/Register'\nimport {createBrowserHistory} from 'history'\nimport PrivateRoute from './PrivateRoute'\nimport Navbar from '../components/Navbar'\n\n// export const history = createBrowserHistory()\n\nconst AppRouter = ({auth}) => {\n    return (\n        <BrowserRouter>\n        <div>\n            {auth.isAuthenticated && <Navbar/>}\n            <Switch>\n                <Route path='/' component={Login} exact={true}/>\n                <Route path='/register' component={Register}/>\n                <PrivateRoute path='/profile' component={Profile}/>\n            </Switch>\n        </div>\n        </BrowserRouter>\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(AppRouter)\n","/Users/ramyarajendra/Desktop/transaction-app/src/components/Register.js",["83","84","85","86"],"import { Box, Button, FilledInput, FormControl, FormHelperText, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport clsx from 'clsx';\nimport { Email, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport {register} from '../actions/Auth'\nimport {validateFields} from '../utils/Common'\nimport {setErrors} from '../actions/Alert'\nimport { Alert } from '@material-ui/lab';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(3),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n  }));\nconst Register = ({register, error, setErrors, success}) => {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        password: '',\n        showPassword: false,\n        email: '',\n        fname:'',\n        lname:'',\n        isSubmitted:false,\n        open: false,\n      });\n    const registerUser = async (event) => {\n        event.preventDefault();\n        const { fname, lname, email, password } = values;\n    \n        const fieldsToValidate = [\n          { fname },\n          { lname },\n          { email },\n          { password }\n        ];\n    \n        const allFieldsEntered = validateFields(fieldsToValidate);\n        if (!allFieldsEntered) {\n            // setValues({...values, errorMsg: {signup_error: 'Please enter all the fields!!'}})\n            setErrors({signup_error: 'Please enter all the fields!!'})\n        } else {\n            const succ = await register({ fname, lname, email, password })\n            // if(succ.success){\n            //     console.log('success..')\n            //     setValues({...values, isSubmitted:true})\n                \n            //     setValues({...values, successMsg:'User registered successfully!!'})\n            // }\n        }\n    };\n      const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    \n      const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n      };\n    \n      const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n      };\n\n      const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setValues({...values, open: false})\n        setValues({...values, isSubmitted: false})\n      };\n\n      useEffect(()=>{\n        if(error && error.length !==0 ){\n          setValues({...values, open: true})\n        }\n        else if( success && success.length !==0 ){\n          setValues({...values, isSubmitted: true})\n        }\n        else{\n          setValues({...values, open: false})\n          setValues({...values, isSubmitted:false})\n        }\n      },[error, success])\n\n    return (\n        <form onSubmit={registerUser}>\n        {error &&  values.open && error.map(e => ( <Snackbar open={values.open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n            {e.errors.signup_error}\n          </Alert>\n        </Snackbar>))}\n        { success && values.isSubmitted && success.map( s => <Snackbar open={values.isSubmitted} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"success\">\n            {s.successMsg}\n          </Alert>\n        </Snackbar>)}\n        <Grid>\n            <Box justifyContent='center' display='flex' className={clsx(classes.margin)}>\n                <Typography variant=\"h5\" >Sign Up</Typography>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">First Name</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='text'\n                        value={values.fname}\n                        onChange={handleChange('fname')}\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Last Name</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='text'\n                        value={values.lname}\n                        onChange={handleChange('lname')}\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='email'\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"email icon\"\n                            edge=\"end\"\n                            >\n                            <Email/>\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                            >\n                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <Button type='submit' variant=\"contained\" className={clsx(classes.margin, classes.textField)} color=\"primary\">SIGN UP</Button>\n            </Box>\n        </Grid>\n        </form>\n    )\n}\nconst mapStateToProps = (state) => ({\n    error: state.alert.error,\n    success: state.alert.success\n})\n\nexport default connect(mapStateToProps, { register, setErrors})(Register)\n","/Users/ramyarajendra/Desktop/transaction-app/src/components/Login.js",["87","88","89","90"],"import { Box, Button, FilledInput, FormControl, FormHelperText, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport clsx from 'clsx';\nimport { Email, Visibility, VisibilityOff } from '@material-ui/icons';\nimport {initiateLogin} from '../actions/Auth'\nimport { connect } from 'react-redux';\nimport { validateFields } from '../utils/Common';\nimport { Alert } from '@material-ui/lab';\nimport { setErrors } from '../actions/Alert';\nimport {history} from '../routers/AppRouter'\nimport { useHistory } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(3),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n  }));\nconst Login = ({initiateLogin, error, setErrors, auth}) => {\n    const classes = useStyles();\n    let history = useHistory()\n    const [values, setValues] = React.useState({\n        password: '',\n        showPassword: false,\n        email: '',\n        open: false\n      });\n    const handleLogin = (event) => {\n        event.preventDefault();\n        const { email, password } = values;\n        const fieldsToValidate = [{ email }, { password }];\n    \n        const allFieldsEntered = validateFields(fieldsToValidate);\n        if (!allFieldsEntered) {\n          setErrors({signin_error:'Please enter all the fields!!'})\n        } else {\n          // login successful\n          initiateLogin(email, password)\n          // history.push('/profile')\n        }\n    };\n      useEffect(()=>{\n        if(auth.isAuthenticated){\n          history.push('/profile')\n        }\n        if(error && error.length !==0 ){\n          setValues({...values, open: true})\n        }\n        else{\n          setValues({...values, open: false})\n        }\n      },[error, auth.isAuthenticated, history])\n      const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    \n      const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n      };\n    \n      const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n      };\n      const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setValues({...values, open: false})\n        \n      };\n\n    return (\n      <form onSubmit={handleLogin}>\n        {error &&  values.open && error.map(e => ( <Snackbar open={values.open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n            {e.errors.signin_error}\n          </Alert>\n        </Snackbar>))}\n        <Grid>\n            <Box justifyContent='center' display='flex' className={clsx(classes.margin)}>\n                <Typography variant=\"h5\" >Sign In to your account</Typography>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='email'\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"email icon\"\n                            edge=\"end\"\n                            >\n                            <Email/>\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                            >\n                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <Button type='submit' variant=\"contained\" className={clsx(classes.margin, classes.textField)} color=\"primary\">SIGN IN</Button>\n            </Box>\n        </Grid>\n        </form>\n    )\n}\n\nconst mapStateToProps = (state) =>({\n  error: state.alert.error,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {initiateLogin, setErrors})(Login)\n","/Users/ramyarajendra/Desktop/transaction-app/src/store/store.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/authReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/utils/Constants.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/Auth.js",["91","92","93"],"/Users/ramyarajendra/Desktop/transaction-app/src/utils/Common.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/alertReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/Alert.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Profile.js",["94"],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/profileReducer.js",["95"],"/Users/ramyarajendra/Desktop/transaction-app/src/routers/PrivateRoute.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Navbar.js",["96","97","98","99","100"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { CssBaseline } from '@material-ui/core';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/Auth'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = ({ logout }) => {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseLogOut = () => {\n    setAnchorEl(null);\n    logout()\n  }\n\n  return (\n    <div className={classes.root}>\n       <CssBaseline/>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <AccountBalanceWalletIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Transaction App\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                {/* <MenuItem onClick={handleClose}>Profile</MenuItem> */}\n                <MenuItem onClick={handleCloseLogOut}>LogOut</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\nexport default connect(mapStateToProps, { logout })(Navbar)","/Users/ramyarajendra/Desktop/transaction-app/src/actions/profileActions.js",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":39,"nodeType":"108","messageId":"109","endLine":3,"endColumn":45},{"ruleId":"106","severity":1,"message":"110","line":7,"column":9,"nodeType":"108","messageId":"109","endLine":7,"endColumn":29},{"ruleId":"106","severity":1,"message":"111","line":1,"column":49,"nodeType":"108","messageId":"109","endLine":1,"endColumn":63},{"ruleId":"106","severity":1,"message":"112","line":1,"column":83,"nodeType":"108","messageId":"109","endLine":1,"endColumn":88},{"ruleId":"106","severity":1,"message":"113","line":54,"column":19,"nodeType":"108","messageId":"109","endLine":54,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":94,"column":9,"nodeType":"116","endLine":94,"endColumn":25,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"111","line":1,"column":49,"nodeType":"108","messageId":"109","endLine":1,"endColumn":63},{"ruleId":"106","severity":1,"message":"112","line":1,"column":83,"nodeType":"108","messageId":"109","endLine":1,"endColumn":88},{"ruleId":"106","severity":1,"message":"118","line":10,"column":9,"nodeType":"108","messageId":"109","endLine":10,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":62,"column":9,"nodeType":"116","endLine":62,"endColumn":47,"suggestions":"119"},{"ruleId":"106","severity":1,"message":"120","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":18},{"ruleId":"106","severity":1,"message":"121","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":15},{"ruleId":"106","severity":1,"message":"122","line":34,"column":15,"nodeType":"108","messageId":"109","endLine":34,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":71,"column":7,"nodeType":"116","endLine":71,"endColumn":20,"suggestions":"123"},{"ruleId":"106","severity":1,"message":"124","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"125","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"106","severity":1,"message":"126","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":14},{"ruleId":"106","severity":1,"message":"127","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":24},{"ruleId":"106","severity":1,"message":"128","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":17},{"ruleId":"106","severity":1,"message":"129","line":37,"column":9,"nodeType":"108","messageId":"109","endLine":37,"endColumn":21},{"ruleId":"106","severity":1,"message":"130","line":5,"column":24,"nodeType":"108","messageId":"109","endLine":5,"endColumn":40},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'createBrowserHistory' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'succ' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["133"],"'history' is defined but never used.",["134"],"'Redirect' is defined but never used.","'Profile' is defined but never used.","'res' is assigned a value but never used.",["135"],"'React' is defined but never used.","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'handleChange' is assigned a value but never used.","'removeAuthHeader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [error, success, values]",{"range":"142","text":"143"},"Update the dependencies array to be: [error, auth.isAuthenticated, history, values]",{"range":"144","text":"145"},"Update the dependencies array to be: [profileData, values]",{"range":"146","text":"147"},[2951,2967],"[error, success, values]",[1945,1983],"[error, auth.isAuthenticated, history, values]",[2128,2141],"[profileData, values]"]
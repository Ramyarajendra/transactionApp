[{"/Users/ramyarajendra/Desktop/transaction-app/src/index.js":"1","/Users/ramyarajendra/Desktop/transaction-app/src/App.js":"2","/Users/ramyarajendra/Desktop/transaction-app/src/reportWebVitals.js":"3","/Users/ramyarajendra/Desktop/transaction-app/src/routers/AppRouter.js":"4","/Users/ramyarajendra/Desktop/transaction-app/src/components/Register.js":"5","/Users/ramyarajendra/Desktop/transaction-app/src/components/Login.js":"6","/Users/ramyarajendra/Desktop/transaction-app/src/store/store.js":"7","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/authReducer.js":"8","/Users/ramyarajendra/Desktop/transaction-app/src/utils/Constants.js":"9","/Users/ramyarajendra/Desktop/transaction-app/src/actions/Auth.js":"10","/Users/ramyarajendra/Desktop/transaction-app/src/utils/Common.js":"11","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/alertReducer.js":"12","/Users/ramyarajendra/Desktop/transaction-app/src/actions/Alert.js":"13","/Users/ramyarajendra/Desktop/transaction-app/src/components/Profile.js":"14","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/profileReducer.js":"15","/Users/ramyarajendra/Desktop/transaction-app/src/routers/PrivateRoute.js":"16","/Users/ramyarajendra/Desktop/transaction-app/src/components/Navbar.js":"17","/Users/ramyarajendra/Desktop/transaction-app/src/actions/profileActions.js":"18","/Users/ramyarajendra/Desktop/transaction-app/src/components/Account.js":"19","/Users/ramyarajendra/Desktop/transaction-app/src/components/AccountForm.js":"20","/Users/ramyarajendra/Desktop/transaction-app/src/components/AddAccountForm.js":"21","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/accountReducer.js":"22","/Users/ramyarajendra/Desktop/transaction-app/src/actions/accountAction.js":"23","/Users/ramyarajendra/Desktop/transaction-app/src/utils/mask.js":"24"},{"size":547,"mtime":1608713363545,"results":"25","hashOfConfig":"26"},{"size":263,"mtime":1608717612893,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1607551489342,"results":"28","hashOfConfig":"26"},{"size":1092,"mtime":1609541413504,"results":"29","hashOfConfig":"26"},{"size":7407,"mtime":1608273101024,"results":"30","hashOfConfig":"26"},{"size":5578,"mtime":1608701404782,"results":"31","hashOfConfig":"26"},{"size":656,"mtime":1609567440595,"results":"32","hashOfConfig":"26"},{"size":604,"mtime":1608716993427,"results":"33","hashOfConfig":"26"},{"size":434,"mtime":1609564624551,"results":"34","hashOfConfig":"26"},{"size":1826,"mtime":1609461148796,"results":"35","hashOfConfig":"26"},{"size":1085,"mtime":1609462131946,"results":"36","hashOfConfig":"26"},{"size":943,"mtime":1608271444437,"results":"37","hashOfConfig":"26"},{"size":673,"mtime":1608271357691,"results":"38","hashOfConfig":"26"},{"size":7054,"mtime":1609475674493,"results":"39","hashOfConfig":"26"},{"size":497,"mtime":1609575542919,"results":"40","hashOfConfig":"26"},{"size":539,"mtime":1608701899383,"results":"41","hashOfConfig":"26"},{"size":3235,"mtime":1609543910815,"results":"42","hashOfConfig":"26"},{"size":928,"mtime":1609461794703,"results":"43","hashOfConfig":"26"},{"size":2502,"mtime":1609554415902,"results":"44","hashOfConfig":"26"},{"size":3215,"mtime":1609572654719,"results":"45","hashOfConfig":"26"},{"size":3700,"mtime":1609573334372,"results":"46","hashOfConfig":"26"},{"size":834,"mtime":1609575484893,"results":"47","hashOfConfig":"26"},{"size":1463,"mtime":1609573849619,"results":"48","hashOfConfig":"26"},{"size":124,"mtime":1609572796324,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"kw8g32",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ramyarajendra/Desktop/transaction-app/src/index.js",[],["106","107"],"/Users/ramyarajendra/Desktop/transaction-app/src/App.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reportWebVitals.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/routers/AppRouter.js",["108","109"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {Route, Switch, BrowserRouter, Router} from 'react-router-dom'\nimport Login from '../components/Login'\nimport Profile from '../components/Profile'\nimport Register from '../components/Register'\nimport {createBrowserHistory} from 'history'\nimport PrivateRoute from './PrivateRoute'\nimport Navbar from '../components/Navbar'\nimport Account from '../components/Account'\n\n// export const history = createBrowserHistory()\n\nconst AppRouter = ({auth}) => {\n    return (\n        <BrowserRouter>\n        <div>\n            {auth.isAuthenticated && <Navbar/>}\n            <Switch>\n                <Route path='/' component={Login} exact={true}/>\n                <Route path='/register' component={Register}/>\n                <PrivateRoute path='/profile' component={Profile}/>\n                <PrivateRoute path='/account' component={Account}/>\n\n            </Switch>\n        </div>\n        </BrowserRouter>\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(AppRouter)\n","/Users/ramyarajendra/Desktop/transaction-app/src/components/Register.js",["110","111","112","113"],"import { Box, Button, FilledInput, FormControl, FormHelperText, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport clsx from 'clsx';\nimport { Email, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport {register} from '../actions/Auth'\nimport {validateFields} from '../utils/Common'\nimport {setErrors} from '../actions/Alert'\nimport { Alert } from '@material-ui/lab';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(3),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n  }));\nconst Register = ({register, error, setErrors, success}) => {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        password: '',\n        showPassword: false,\n        email: '',\n        fname:'',\n        lname:'',\n        isSubmitted:false,\n        open: false,\n      });\n    const registerUser = async (event) => {\n        event.preventDefault();\n        const { fname, lname, email, password } = values;\n    \n        const fieldsToValidate = [\n          { fname },\n          { lname },\n          { email },\n          { password }\n        ];\n    \n        const allFieldsEntered = validateFields(fieldsToValidate);\n        if (!allFieldsEntered) {\n            // setValues({...values, errorMsg: {signup_error: 'Please enter all the fields!!'}})\n            setErrors({signup_error: 'Please enter all the fields!!'})\n        } else {\n            const succ = await register({ fname, lname, email, password })\n            // if(succ.success){\n            //     console.log('success..')\n            //     setValues({...values, isSubmitted:true})\n                \n            //     setValues({...values, successMsg:'User registered successfully!!'})\n            // }\n        }\n    };\n      const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    \n      const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n      };\n    \n      const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n      };\n\n      const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setValues({...values, open: false})\n        setValues({...values, isSubmitted: false})\n      };\n\n      useEffect(()=>{\n        if(error && error.length !==0 ){\n          setValues({...values, open: true})\n        }\n        else if( success && success.length !==0 ){\n          setValues({...values, isSubmitted: true})\n        }\n        else{\n          setValues({...values, open: false})\n          setValues({...values, isSubmitted:false})\n        }\n      },[error, success])\n\n    return (\n        <form onSubmit={registerUser}>\n        {error &&  values.open && error.map(e => ( <Snackbar open={values.open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n            {e.errors.signup_error}\n          </Alert>\n        </Snackbar>))}\n        { success && values.isSubmitted && success.map( s => <Snackbar open={values.isSubmitted} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"success\">\n            {s.successMsg}\n          </Alert>\n        </Snackbar>)}\n        <Grid>\n            <Box justifyContent='center' display='flex' className={clsx(classes.margin)}>\n                <Typography variant=\"h5\" >Sign Up</Typography>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">First Name</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='text'\n                        value={values.fname}\n                        onChange={handleChange('fname')}\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Last Name</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='text'\n                        value={values.lname}\n                        onChange={handleChange('lname')}\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='email'\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"email icon\"\n                            edge=\"end\"\n                            >\n                            <Email/>\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                            >\n                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <Button type='submit' variant=\"contained\" className={clsx(classes.margin, classes.textField)} color=\"primary\">SIGN UP</Button>\n            </Box>\n        </Grid>\n        </form>\n    )\n}\nconst mapStateToProps = (state) => ({\n    error: state.alert.error,\n    success: state.alert.success\n})\n\nexport default connect(mapStateToProps, { register, setErrors})(Register)\n","/Users/ramyarajendra/Desktop/transaction-app/src/components/Login.js",["114","115","116","117"],"import { Box, Button, FilledInput, FormControl, FormHelperText, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport clsx from 'clsx';\nimport { Email, Visibility, VisibilityOff } from '@material-ui/icons';\nimport {initiateLogin} from '../actions/Auth'\nimport { connect } from 'react-redux';\nimport { validateFields } from '../utils/Common';\nimport { Alert } from '@material-ui/lab';\nimport { setErrors } from '../actions/Alert';\nimport {history} from '../routers/AppRouter'\nimport { useHistory } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(3),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n  }));\nconst Login = ({initiateLogin, error, setErrors, auth}) => {\n    const classes = useStyles();\n    let history = useHistory()\n    const [values, setValues] = React.useState({\n        password: '',\n        showPassword: false,\n        email: '',\n        open: false\n      });\n    const handleLogin = (event) => {\n        event.preventDefault();\n        const { email, password } = values;\n        const fieldsToValidate = [{ email }, { password }];\n    \n        const allFieldsEntered = validateFields(fieldsToValidate);\n        if (!allFieldsEntered) {\n          setErrors({signin_error:'Please enter all the fields!!'})\n        } else {\n          // login successful\n          initiateLogin(email, password)\n          // history.push('/profile')\n        }\n    };\n      useEffect(()=>{\n        if(auth.isAuthenticated){\n          history.push('/profile')\n        }\n        if(error && error.length !==0 ){\n          setValues({...values, open: true})\n        }\n        else{\n          setValues({...values, open: false})\n        }\n      },[error, auth.isAuthenticated, history])\n      const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n      };\n    \n      const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n      };\n    \n      const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n      };\n      const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        setValues({...values, open: false})\n        \n      };\n\n    return (\n      <form onSubmit={handleLogin}>\n        {error &&  values.open && error.map(e => ( <Snackbar open={values.open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\">\n            {e.errors.signin_error}\n          </Alert>\n        </Snackbar>))}\n        <Grid>\n            <Box justifyContent='center' display='flex' className={clsx(classes.margin)}>\n                <Typography variant=\"h5\" >Sign In to your account</Typography>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type='email'\n                        value={values.email}\n                        onChange={handleChange('email')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"email icon\"\n                            edge=\"end\"\n                            >\n                            <Email/>\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowPassword}\n                            onMouseDown={handleMouseDownPassword}\n                            edge=\"end\"\n                            >\n                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </Box>\n            <Box justifyContent='center' display='flex'>\n                <Button type='submit' variant=\"contained\" className={clsx(classes.margin, classes.textField)} color=\"primary\">SIGN IN</Button>\n            </Box>\n        </Grid>\n        </form>\n    )\n}\n\nconst mapStateToProps = (state) =>({\n  error: state.alert.error,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {initiateLogin, setErrors})(Login)\n","/Users/ramyarajendra/Desktop/transaction-app/src/store/store.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/authReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/utils/Constants.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/Auth.js",["118","119","120"],"import {SIGN_IN, SIGN_OUT} from '../utils/Constants'\nimport axios from 'axios'\nimport { setErrors, setSuccessMsg } from './Alert'\nimport {setAuthHeader, removeAuthHeader} from '../utils/Common'\n// import {history} from '../routers/AppRouter'\nimport { Redirect } from 'react-router-dom'\nimport Profile from '../components/Profile'\nimport { getProfile } from './profileActions'\n\n\nexport const initiateLogin  = (email, password) => async dispatch => {\n    try{\n        const result = await axios.post('/signin', {\n            email,\n            password\n        })\n        const user = result.data\n        localStorage.setItem('user_token', user.token);\n        dispatch({\n            type: SIGN_IN,\n            payload: user\n        })\n        dispatch(getProfile(user.email))\n        // history.push('/profile')\n    }\n    catch(error){\n        console.log(error.response.data)\n        dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const register = (data) => async dispatch => {\n    try{\n        const res = await axios.post('/signup', data)\n        dispatch(setSuccessMsg('User Registered Successfully!!'))\n        return {success : true}\n    }\n    catch(error){\n        console.log(error)\n        dispatch(setErrors(error.response.data))\n        return { success: false }\n    }\n}\nexport const signIn = (user) => dispatch => {\n    dispatch({\n        type: SIGN_IN,\n        payload: user\n    })\n}\nexport const signOut = () => ({\n    type: SIGN_OUT\n  });\n  \nexport const logout = () => async dispatch =>{\n      try {\n            setAuthHeader();\n            await axios.post(`/logout`);\n            removeAuthHeader();\n            localStorage.removeItem('user_token');\n            return dispatch(signOut());\n      } catch (error) {\n            error.response && dispatch(setErrors(error.response.data));\n      }\n  };","/Users/ramyarajendra/Desktop/transaction-app/src/utils/Common.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/alertReducer.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/Alert.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Profile.js",["121"],"import { Box, Button, Card, CardActions, CardContent, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, FilledInput, FormControl, IconButton, InputAdornment, InputLabel, makeStyles, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport EditIcon from '@material-ui/icons/Edit';\nimport clsx from 'clsx';\nimport { Email } from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateProfile } from '../actions/profileActions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    //   minWidth: 10,\n        width: '100%'\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 16,\n    },\n    paper:{\n        margin: 'auto',\n        maxWidth: 500\n    },\n    margin: {\n        margin: theme.spacing(3),\n      },\n      withoutLabel: {\n        marginTop: theme.spacing(3),\n      },\n      textField: {\n        width: '50ch',\n      },\n  }));\nconst Profile = ({profileData, updateProfile}) => {\n    const [values, setValues] = useState(\n        {\n            fname: null,\n            lname: null,\n            email: null\n        }\n    )\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n\n      };\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setValues({...values , fname: profileData && profileData.fname  , lname: profileData && profileData.lname, email: profileData && profileData.email})\n    };\n    const onSave = (e) => {\n        e.preventDefault()\n        updateProfile(values)\n        setOpen(false)\n        // handleClose()\n    }\n    useEffect(() => {\n        setValues({...values , fname: profileData && profileData.fname  , lname: profileData && profileData.lname, email: profileData && profileData.email})\n    },[profileData])\n    return (\n        <div>\n        <Container className={classes.paper}>\n            \n            <Box display='flex' m={1} p={1} justifyContent=\"center\">\n                <Typography variant=\"h4\" component=\"h2\">\n                        Profile\n                </Typography>\n            </Box>\n            <Card className={classes.root}>\n                { profileData && <CardContent>\n                    <Box display=\"flex\" justifyContent='flex-end'>\n                        <IconButton color='primary'  onClick={handleClickOpen}>\n                            <EditIcon/>\n                        </IconButton>\n                    </Box>\n                    <Typography className={classes.pos} >\n                        First Name : {profileData.fname}\n                    </Typography>\n                    <Typography className={classes.pos} >\n                        Last Name : {profileData.lname}\n                    </Typography>\n                    <Typography className={classes.pos}>\n                        Email : {profileData.email}\n                    </Typography>\n                </CardContent>}\n                <Divider/>\n                <CardActions>\n                    <Button variant=\"outlined\" color=\"primary\" size=\"small\">Change Password</Button>\n                </CardActions>\n            </Card>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <form onSubmit={onSave}>\n                <DialogTitle id=\"alert-dialog-title\">{\"Edit Your Profile\"}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Box justifyContent='center' display='flex'>\n                        <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                            <InputLabel htmlFor=\"filled-adornment-password\">First Name</InputLabel>\n                            <FilledInput\n                                id=\"filled-adornment-password\"\n                                type='text'\n                                value={values.fname}\n                                onChange={handleChange('fname')}\n                                required\n                            />\n                        </FormControl>\n                    </Box>\n                    <Box justifyContent='center' display='flex'>\n                        <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                            <InputLabel htmlFor=\"filled-adornment-password\">Last Name</InputLabel>\n                            <FilledInput\n                                id=\"filled-adornment-password\"\n                                type='text'\n                                value={values.lname}\n                                onChange={handleChange('lname')}\n                                required\n                            />\n                        </FormControl>\n                    </Box>\n                    <Box justifyContent='center' display='flex'>\n                        <FormControl  className={clsx(classes.margin, classes.textField)} variant=\"filled\">\n                            <InputLabel htmlFor=\"filled-adornment-password\">Email</InputLabel>\n                            <FilledInput\n                                id=\"filled-adornment-password\"\n                                type='email'\n                                value={values.email}\n                                onChange={handleChange('email')}\n                                required\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"email icon\"\n                                    edge=\"end\"\n                                    >\n                                    <Email/>\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button type='submit' color=\"primary\" autoFocus>\n                        Save\n                    </Button>\n                </DialogActions>\n                </form>\n            </Dialog>\n        </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    profileData: state.profile.profileData\n})\n\nexport default withRouter(connect(mapStateToProps, {updateProfile}) (Profile))\n","/Users/ramyarajendra/Desktop/transaction-app/src/reducers/profileReducer.js",["122"],"/Users/ramyarajendra/Desktop/transaction-app/src/routers/PrivateRoute.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/Navbar.js",["123"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { CssBaseline } from '@material-ui/core';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/Auth'\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = ({ logout }) => {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleCloseLogOut = () => {\n    setAnchorEl(null);\n    logout()\n  }\n\n  return (\n    <div className={classes.root}>\n       <CssBaseline/>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <AccountBalanceWalletIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Transaction App\n          </Typography>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n              <Link to='/profile' style={{ textDecoration: 'none', display:'block', color:'#000' }}> \n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n              </Link> \n              <Link to='/account' style={{ textDecoration: 'none', display:'block', color:'#000' }}> \n                <MenuItem onClick={handleClose}>Account</MenuItem>\n              </Link>\n                <MenuItem onClick={handleCloseLogOut}>LogOut</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\nexport default connect(mapStateToProps, { logout })(Navbar)","/Users/ramyarajendra/Desktop/transaction-app/src/actions/profileActions.js",["124"],"import {setErrors} from './Alert'\n// import {history} from '../routers/AppRouter'\nimport { UPDATE_PROFILE , GET_PROFILE} from '../utils/Constants';\nimport axios from 'axios'\nimport {setAuthHeader, removeAuthHeader} from '../utils/Common'\n\nexport const updateProfile = (profile) => async dispatch => {\n    try{\n        const res = await axios.post('/profile', profile)\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        // history.push('/profile');\n    }catch (error) {\n        error.response && \n        dispatch(setErrors(error.response.data));\n    }\n}\n\nexport const getProfile = () => async dispatch => {\n    try {\n        setAuthHeader()\n        const res = await axios.get('/profile')\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data));\n    }\n}","/Users/ramyarajendra/Desktop/transaction-app/src/components/Account.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/components/AccountForm.js",["125"],"/Users/ramyarajendra/Desktop/transaction-app/src/components/AddAccountForm.js",["126"],"/Users/ramyarajendra/Desktop/transaction-app/src/reducers/accountReducer.js",["127"],"/Users/ramyarajendra/Desktop/transaction-app/src/actions/accountAction.js",[],"/Users/ramyarajendra/Desktop/transaction-app/src/utils/mask.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":39,"nodeType":"134","messageId":"135","endLine":3,"endColumn":45},{"ruleId":"132","severity":1,"message":"136","line":7,"column":9,"nodeType":"134","messageId":"135","endLine":7,"endColumn":29},{"ruleId":"132","severity":1,"message":"137","line":1,"column":49,"nodeType":"134","messageId":"135","endLine":1,"endColumn":63},{"ruleId":"132","severity":1,"message":"138","line":1,"column":83,"nodeType":"134","messageId":"135","endLine":1,"endColumn":88},{"ruleId":"132","severity":1,"message":"139","line":54,"column":19,"nodeType":"134","messageId":"135","endLine":54,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":94,"column":9,"nodeType":"142","endLine":94,"endColumn":25,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"137","line":1,"column":49,"nodeType":"134","messageId":"135","endLine":1,"endColumn":63},{"ruleId":"132","severity":1,"message":"138","line":1,"column":83,"nodeType":"134","messageId":"135","endLine":1,"endColumn":88},{"ruleId":"132","severity":1,"message":"144","line":10,"column":9,"nodeType":"134","messageId":"135","endLine":10,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":62,"column":9,"nodeType":"142","endLine":62,"endColumn":47,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"146","line":6,"column":10,"nodeType":"134","messageId":"135","endLine":6,"endColumn":18},{"ruleId":"132","severity":1,"message":"147","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":15},{"ruleId":"132","severity":1,"message":"148","line":34,"column":15,"nodeType":"134","messageId":"135","endLine":34,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":71,"column":7,"nodeType":"142","endLine":71,"endColumn":20,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"150","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"151","line":34,"column":9,"nodeType":"134","messageId":"135","endLine":34,"endColumn":21},{"ruleId":"132","severity":1,"message":"152","line":5,"column":24,"nodeType":"134","messageId":"135","endLine":5,"endColumn":40},{"ruleId":"140","severity":1,"message":"153","line":52,"column":7,"nodeType":"142","endLine":52,"endColumn":14,"suggestions":"154"},{"ruleId":"132","severity":1,"message":"155","line":8,"column":43,"nodeType":"134","messageId":"135","endLine":8,"endColumn":57},{"ruleId":"156","severity":1,"message":"157","line":21,"column":9,"nodeType":"158","messageId":"159","endLine":22,"endColumn":20},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'createBrowserHistory' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'succ' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["162"],"'history' is defined but never used.",["163"],"'Redirect' is defined but never used.","'Profile' is defined but never used.","'res' is assigned a value but never used.",["164"],"'React' is defined but never used.","'handleChange' is assigned a value but never used.","'removeAuthHeader' is defined but never used.","React Hook useEffect has a missing dependency: 'getAccountDetails'. Either include it or remove the dependency array. If 'getAccountDetails' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["165"],"'InputAdornment' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [error, success, values]",{"range":"174","text":"175"},"Update the dependencies array to be: [error, auth.isAuthenticated, history, values]",{"range":"176","text":"177"},"Update the dependencies array to be: [profileData, values]",{"range":"178","text":"179"},"Update the dependencies array to be: [email, getAccountDetails]",{"range":"180","text":"181"},[2951,2967],"[error, success, values]",[1945,1983],"[error, auth.isAuthenticated, history, values]",[2128,2141],"[profileData, values]",[1494,1501],"[email, getAccountDetails]"]